<?xml version="1.0" encoding="ISO-8859-1"?>
<document url="http://www.dom4j.org/guide.xml">
  <body>
    <title>User Guide</title>
    
    <section title="Parsing XML">
      <p>It is likely that you need to parse an XML document of some kind.
        The following code demonstrates how to achieve this in DOM4J
      </p>
<pre>
import java.net.URL;

import org.dom4j.Document;
import org.dom4j.DocumentException;
import org.dom4j.io.SAXReader;

public class Foo {

    public Document parse(URL url) throws DocumentException {
        SAXReader reader = new SAXReader();
        Document document = reader.read(url);
        return document;
    }
}
</pre>
    </section>

    <section title="Using Iterators">
      <p>A document can be navigated using a variety of methods that return
        standard Java Iterators. For example
      </p>
<pre>
    public void bar(Document document) throws DocumentException {

        Element root = document.getRootElement();

        // iterate through child elements of root
        for ( Iterator i = root.elementIterator(); i.hasNext(); ) {
            Element element = (Element) i.next();
            // do something
        }

        // iterate through child elements of root with element name "foo"
        for ( Iterator i = root.elementIterator( "foo" ); i.hasNext(); ) {
            Element foo = (Element) i.next();
            // do something
        }

        // iterate through attributes of root 
        for ( Iterator i = root.attributeIterator(); i.hasNext(); ) {
            Attribute attribute = (Attribute) i.next();
            // do something
        }
     }
</pre>
    </section>

    <section title="Using XPath Navigation">
      <p>In <b>DOM4J</b> XPath expressions can be evaluated on the Document 
        or any Node in the tree. 
        This allows complex navigation throughout the document with a single 
        line of code. For example.
      </p>
<pre>
    public void bar(Document document) throws DocumentException {
        List list = document.selectNodes( "//foo/bar" );

        Node node = document.selectSingleNode( "//foo/bar/author" );

        String name = node.valueOf( "@name" );
    }
</pre>
    </section>


    <section title="Creating a new XML document">
      <p>Often in <b>DOM4J</b> you will need to create a new document
        from scratch. Here's an example of doing that.
      </p>
<pre>
import org.dom4j.Document;
import org.dom4j.DocumentFactory;
import org.dom4j.Element;

public class Foo {

    public Document createDocument() {
        Document document = DocumentFactory.newDocument();
        Element root = document.addElement( "root" );

        Element author1 = root.addElement( "author" );
        author1.setAttributeValue( "name", "James" );
        author1.setAttributeValue( "location", "UK" );
        
        Element author2 = root.addElement( "author" );
        author2.setAttributeValue( "name", "Bob" );
        author2.setAttributeValue( "location", "Canada" );

        return document;
    }
}
</pre>
    </section>

  </body>
</document>









