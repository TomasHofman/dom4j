<?xml version="1.0" encoding="ISO-8859-1"?>
<document url="http://www.dom4j.org/todo.xml">
  <body>
    <title>To Do List</title>
    
    <section title="Urgent tasks">
      <ul>
        <li>Complete JavaDoc for interfaces, particularly for Branch and Element
        </li>
        <li>Do a UML style documentation of Node, Branch, Element, Document etc.
        </li>
        <li>Resolve the addAdditionalNamespace / add(Namespace) / setNamespace() 
            inconsistency, like addText(text), setText(text).
        </li>
        <li>Add function/variable/namespace contexts to XPath?
        </li>
        <li>Have getNamespaces() and getAllNamespaces() 
          which would walk up the tree finding all namespaces;
        </li>
      </ul>
    </section>

    <section title="Outstanding tasks">
      <ul>
        <li>Implementation support for lazily constructed Elements, proxies, read only helper classes etc.
        </li>
        <li>XInclude, XLink and database query Element proxies which evaluate themselves on demand.
        </li>
        <li>Better support for easy sharing of Element branches without cloning or exceptions being thrown
        </li>
        <li>Add properties file for the default parser class names, factories, 
        XPathEngine et al as an alternative to using system properties or 
        embedding class names in code.
        </li>
      </ul>
    </section>

    <section title="Code Generation">
      <p>Code generate memory and peformance efficient Element and Attribute 
        implementations based on a DTD or Schema to improve performance and memory usage
        in use cases where documents of a particular schema are repeatedly 
        parsed (e.g. in EAI, XML messaging, SOAP, Servlets etc.) 
      </p>
      <p>For example the attribute "height" in namespace "foo" could be code generated using only 
      1 object reference as instance data:-
      </p>
<pre>
public class HeightAttribute extends AbstractAttribute {

    public static final Namespace FOO_NAMESPACE 
        = new DefaultNamespace( "foo", "http://foo.bar.com/foo/1.0" );


    /** The only instance data - the value */
    private String value;

    public Namespace getNamespace() {
      return FOO_NAMESPACE;
    }

    public String getName() {
        return "weight";
    }

    public String getValue() {
        return value;
    }

    ...
}
</pre>
    </section>

    <section title="Design Decisions">
    </section>

    <section title="Change History">
      <ul>
        <li>Added new JUnit unit test cases together with an Ant build target 
            of "test" which executes all of the unit tests.
        </li>
        <li>DOM4J now comes with a default SAX parser (derived from Aelfred) which is used if
          the <code>org.xml.sax.driver</code> system property is not specified.
        </li>
      </ul>
    </section>

  </body>
</document>









