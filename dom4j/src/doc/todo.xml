<?xml version="1.0" encoding="ISO-8859-1"?>
<document url="http://www.dom4j.org/todo.xml">
  <body>
    <title>To Do List</title>
    
    <section title="Known problems">    
      <p>The following functions are not yet fully supported in the inbuilt
        XPath engine</p>
      <ul>
        <li>id()</li>
        <li>generate-id()</li>
        <li>format-number()</li>
      </ul>
    </section>

    <section title="Future developments">
      <ul>
        <li>Implement XSLT engine on top of DOM4J
        </li>
        <li>Implement optional implementation of DOM4J model which also
            implements the W3C DOM API
        </li>
        <li>Clean integration with XSLT / JAXP / TRaX interfaces
        </li>
        <li>XML Query implementation on top of DOM4J
        </li>
      </ul>
    </section>

    <section title="Change History">
        <section title="0.2 release">
          <p>There following new features were added:-
          </p>
          <ul>
            <li>New sorting method added to Node for easier selections of nodes
              which are sorted via an XPath expression. The following
              code sorts all CUSTOMER elements by their name attributes and 
              removes duplicates:-
              <pre>
Document document 
  = new SAXReader().read( new File( "customers.xml" ) );

List customers 
  = document.selectNodes( "//CUSTOMER", "@name", true );
              </pre>
            </li>
            <li>The getText() and getString() methods of Element now return
              the textual values of CDATA, Entity and Text nodes. 
              The previous version only returned Text node values.
            </li>
            <li>Refactored code and removed XPathEngine, XPathHelper and 
                all the static newXXX() methods in DocumentFactory.
                Added equivalent methods to DocumentHelper and DocumentFactory.
            </li>
          </ul>
          <p>This release also includes full XPath source code.
          </p>
        </section>
        <section title="0.1 release">
          <p>Initial release which comes complete with DOM, JAXP and SAX 
            support and integrated XPath
          </p>
        </section>
    </section>

    <section title="Design Decisions">
      <ul>
        <li>Should the Element store String objects to represent Text nodes 
          (for efficiency) or should we stay with the clean polymorphic design
          of using a Node implementation for all element content?
        </li>
      </ul>
    </section>

  </body>
</document>









